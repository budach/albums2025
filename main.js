const GENRE_COLORS = ['#4782C0', '#47A082', '#8247C0', '#BD7C3E', '#C04782', '#2B9494', '#377A3A', '#C09000', '#B7302A', '#1770B7', '#005A5A', '#631FAD', '#886008', '#AE5C5C', '#5A4BAE', '#2C8252', '#DB5902', '#903E9F', '#346086', '#974343', '#17827B', '#9F7D17', '#C04A36', '#668B66']; let chartInstance = null; const albumData = []; const activeGenreFilters = new Set(); const genreLabelElements = new Map(); const elements = { albumList: document.querySelector('.album-list'), filterContainer: document.querySelector('.filter-container'), ratingInfoTrigger: document.getElementById('ratingInfoTrigger'), genreChartCanvas: document.getElementById('genreChart') }; function initializeAlbumData() { if (!elements.albumList) return; const albumElements = Array.from(elements.albumList.querySelectorAll('li')); for (const element of albumElements) { const genreText = element.querySelector('.genre')?.textContent.toLowerCase() || ''; const ratingText = element.querySelector('.rating')?.textContent || '0/5'; const ratingValue = parseFloat(ratingText.split('/')[0]); albumData.push({ element, rating: ratingValue, genreArray: genreText ? genreText.split('/').map(g => g.trim()).filter(Boolean) : [] }); } } function extractAllGenres() { const genreCounts = new Map(); for (const { genreArray } of albumData) { for (const genre of genreArray) { const count = genreCounts.get(genre) || 0; genreCounts.set(genre, count + 1); } } return Array.from(genreCounts.entries(), ([name, count]) => ({ name: name.charAt(0).toLowerCase() + name.slice(1), lowerName: name, count })).sort((a, b) => b.count - a.count || a.name.localeCompare(b.name)); } function setupGenreLabels() { const genres = extractAllGenres(); if (genres.length === 0 || !elements.albumList) return; const container = document.createElement('div'); container.className = 'genre-labels-container'; const fragment = document.createDocumentFragment(); genres.forEach((genre, index) => { const label = document.createElement('span'); const color = GENRE_COLORS[index % GENRE_COLORS.length]; label.className = 'genre-label'; label.textContent = `${genre.name} (${genre.count})`; label.setAttribute('data-genre', genre.lowerName); label.style.backgroundColor = color; label.style.color = '#E2E8F0'; genreLabelElements.set(genre.lowerName, label); fragment.appendChild(label); }); container.appendChild(fragment); elements.filterContainer.parentNode.insertBefore(container, elements.albumList); container.addEventListener('click', handleGenreFilterClick); } function handleGenreFilterClick(e) { const label = e.target.closest('.genre-label'); if (!label) return; const genreName = label.getAttribute('data-genre'); if (activeGenreFilters.has(genreName)) { activeGenreFilters.delete(genreName); } else { activeGenreFilters.add(genreName); } applyAlbumFilters(); } function applyAlbumFilters() { genreLabelElements.forEach((label, genreName) => { label.classList.toggle('active', activeGenreFilters.has(genreName)); }); const hasActiveFilters = activeGenreFilters.size > 0; for (const { element, genreArray } of albumData) { const isVisible = !hasActiveFilters || genreArray.some(genre => activeGenreFilters.has(genre)); element.style.display = isVisible ? 'flex' : 'none'; } } function createGenreChart() { if (!elements.genreChartCanvas) return; const genreData = new Map(); for (const { genreArray, rating } of albumData) { for (const genre of genreArray) { if (!genreData.has(genre)) { genreData.set(genre, { high: 0, low: 0, total: 0 }); } const counts = genreData.get(genre); counts.total++; if (rating >= 3) { counts.high++; } else { counts.low++; } } } const sortedGenres = [...genreData.entries()].filter(([, data]) => data.total >= 5).sort((a, b) => (b[1].high - a[1].high) || (b[1].total - a[1].total)); const labels = sortedGenres.map(([name]) => name.charAt(0).toLowerCase() + name.slice(1)); const highRatingsData = sortedGenres.map(([, data]) => data.high); const lowRatingsData = sortedGenres.map(([, data]) => data.low); const canvasParent = elements.genreChartCanvas.parentElement; canvasParent.style.height = `${labels.length * 27}px`; if (chartInstance) { chartInstance.destroy(); } chartInstance = new Chart(elements.genreChartCanvas.getContext('2d'), { type: 'bar', data: { labels, datasets: [{ label: 'Rating â‰¥ 3 (good)', data: highRatingsData, backgroundColor: '#4FD1C5' }, { label: 'Rating < 3 (not good)', data: lowRatingsData, backgroundColor: '#E53E3E' }] }, options: { maintainAspectRatio: false, indexAxis: 'y', responsive: true, interaction: { mode: 'index', intersect: true }, plugins: { legend: { position: 'top', labels: { color: '#E2E8F0' } }, tooltip: { backgroundColor: '#4A5568', borderColor: '#A0AEC0', borderWidth: 1, padding: 5, cornerRadius: 4, displayColors: true } }, scales: { x: { position: 'top', stacked: true, ticks: { color: '#E2E8F0', stepSize: 2 }, grid: { color: 'rgba(160, 174, 192, 0.2)' } }, y: { stacked: true, ticks: { color: '#E2E8F0', autoSkip: false }, grid: { display: false } } } } }); } function setupTooltipBehavior() { if (!elements.ratingInfoTrigger) return; document.addEventListener('click', (e) => { if (!elements.ratingInfoTrigger.contains(e.target)) { elements.ratingInfoTrigger.blur(); } }, { passive: true }); } function setupYouTubeLinks() { document.querySelectorAll('a.YT').forEach(link => { link.target = '_blank'; link.rel = 'noopener noreferrer'; }); } function init() { initializeAlbumData(); setupGenreLabels(); applyAlbumFilters(); setupTooltipBehavior(); setupYouTubeLinks(); createGenreChart(); } if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', init); } else { init(); }